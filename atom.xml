<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ian Blenke - DevOps]]></title>
  <link href="http://ianblenke.github.io/atom.xml" rel="self"/>
  <link href="http://ianblenke.github.io/"/>
  <updated>2014-11-04T23:48:04-05:00</updated>
  <id>http://ianblenke.github.io/</id>
  <author>
    <name><![CDATA[Ian Blenke]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Boot2Docker]]></title>
    <link href="http://ianblenke.github.io/blog/2014/11/04/using-boot2docker/"/>
    <updated>2014-11-04T23:13:25-05:00</updated>
    <id>http://ianblenke.github.io/blog/2014/11/04/using-boot2docker</id>
    <content type="html"><![CDATA[<h2>Boot2Docker command-line</h2>

<p>Preface: the <a href="https://github.com/boot2docker/boot2docker">boot2docker README</a> is a great place to discover the below commands in more detail.</p>

<p>Now that we have Boot2Docker installed, we need to initialize a VM instance</p>

<pre><code>boot2docker init
</code></pre>

<p>This merely defines the default boot2docker VM, it does not start it. To do that, we need to bring it &ldquo;up&rdquo;</p>

<pre><code>boot2docker up
</code></pre>

<p>When run, it looks something like this:</p>

<pre><code>icbcfmbp:~ icblenke$ boot2docker up
Waiting for VM and Docker daemon to start...
..........ooo
Started.
Writing /Users/icblenke/.boot2docker/certs/boot2docker-vm/ca.pem
Writing /Users/icblenke/.boot2docker/certs/boot2docker-vm/cert.pem
Writing /Users/icblenke/.boot2docker/certs/boot2docker-vm/key.pem

To connect the Docker client to the Docker daemon, please set:
    export DOCKER_CERT_PATH=/Users/icblenke/.boot2docker/certs/boot2docker-vm
    export DOCKER_TLS_VERIFY=1
    export DOCKER_HOST=tcp://192.168.59.103:2376

icbcfmbp:~ icblenke$
</code></pre>

<p>This is all fine and dandy, but that shell didn&rsquo;t actually source those variables. To do that we use boot2docker shellinit:</p>

<pre><code>eval $(boot2docker shellinit)
</code></pre>

<p>Now the shell has those variables exported for the running boot2docker VM.</p>

<p>The persistence of the boot2docker VM lasts only until we run a boot2docker destroy</p>

<pre><code>boot2docker destroy
</code></pre>

<p>After doing this, there is no longer a VM defined. We would need to go back to the boot2docker init step above and repeat.</p>

<h2>Docker command-line</h2>

<p>From this point forward, we use the docker command to interact with the boot2docker VM as if we are on a linux docker host.</p>

<p>The docker command is just a compiled go application that makes RESTful calls to the docker daemon inside the linux VM.</p>

<pre><code>bash-3.2$ docker info
Containers: 0
Images: 0
Storage Driver: aufs
 Root Dir: /mnt/sda1/var/lib/docker/aufs
  Dirs: 0
  Execution Driver: native-0.2
  Kernel Version: 3.16.4-tinycore64
  Operating System: Boot2Docker 1.3.1 (TCL 5.4); master : 9a31a68 - Fri Oct 31 03:14:34 UTC 2014
  Debug mode (server): true
  Debug mode (client): false
  Fds: 10
  Goroutines: 11
  EventsListeners: 0
  Init Path: /usr/local/bin/docker
</code></pre>

<p>This holds true for both OS/X and Windows.</p>

<p>The boot2docker facade is just a handy wrapper to prepare the guest linux host VM for the docker daemin and local docker command-line client for your development host OS environment.</p>

<p>And now you have a starting point for exploring <a href="http://docker.io">Docker</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Boot2Docker]]></title>
    <link href="http://ianblenke.github.io/blog/2014/11/04/installing-boot2docker/"/>
    <updated>2014-11-04T22:41:53-05:00</updated>
    <id>http://ianblenke.github.io/blog/2014/11/04/installing-boot2docker</id>
    <content type="html"><![CDATA[<p>Starting with a new team of developers, it helps to document the bootstrapping steps to a development environment.</p>

<p>Rather than try and use a convergence tool like Chef, Puppet, Ansible, or SALT, this time the environment will embrace Docker.</p>

<p>We could use a tool like Vagrant, but we need to support both Windows and Mac development workstations, and Vagrant under Windows can be vexing.</p>

<p>For this, we will begin anew using <a href="http://boot2docker.io">Boot2Docker</a></p>

<p>Before we begin, be sure to install <a href="https://www.virtualbox.org/">VirtualBox</a> from Oracle&rsquo;s <a href="https://www.virtualbox.org/">VirtualBox.org website</a></p>

<p>The easiest way to install VirtualBox is to use <a href="http://caskroom.io/">HomeBrew Cask</a> under <a href="http://brew.sh">HomeBrew</a></p>

<pre><code>brew install caskroom/cask/brew-cask
brew cask install virtualbox
</code></pre>

<p>The easiest way to install boot2docker is to use <a href="http://brew.sh">HomeBrew</a></p>

<pre><code>brew install boot2docker
</code></pre>

<p>Afterward, be sure to upgrade the homebrew bottle to the latest version of boot2docker:</p>

<pre><code>boot2docker upgrade
</code></pre>

<p>Alternatively, a sample commandline install of boot2docker might look like this:</p>

<pre><code>wget https://github.com/boot2docker/osx-installer/releases/download/v1.3.1/Boot2Docker-1.3.1.pkg
sudo installer -pkg ~/Downloads/Boot2Docker-1.3.1.pkg -target /
</code></pre>

<p>I&rsquo;ll leave the commandline install of VirtualBox up to your imagination. With <a href="http://caskroom.io">HomeBrew Cask</a>, there&rsquo;s really not much of a point.</p>

<p>If you&rsquo;re still not comfortable, below is a pictoral screenshot guide to installing boot2docker the point-and-click way.</p>

<h2>Step 0</h2>

<p>Download <a href="https://github.com/boot2docker/osx-installer/releases">boot2docker for OS/X</a> or <a href="https://github.com/boot2docker/windows-installer/releases">boot2docker for Windows</a></p>

<h2>Step 1</h2>

<p>Run the downloaded Boot2Docker.pkg or docker-install.exe to kick off the installer.</p>

<p><img src="http://ianblenke.github.io/images/screenshots/boot2docker/step1-downloads.png" width="1636" height="1022" title="Downloads" alt="Boot2docker.pkg in Downloads folder"></p>

<h2>Step 2</h2>

<p>Click the Continue button to allow the installer to run a program to detect if boot2docker can be installed.</p></p>

<p><img src="http://ianblenke.github.io/images/screenshots/boot2docker/step2-run-a-program.png" width="1318" height="968" title="Click Continue button" alt="Allow installer to run a program to detect if boot2docker can be installed"></p>

<h2>Step 3</h2>

<p>Click the Continue button to proceed beyond the initial installation instructions dialog.</p>

<p><img src="http://ianblenke.github.io/images/screenshots/boot2docker/step3-install-splash.png" width="1316" height="944" title="Click Continue button" alt="Instructions to install boot2docker"></p>

<h2>Step 4</h2>

<p>The installer will now ask for an admin username/password to obtain admin rights to install boot2docker.</p>

<p><img src="http://ianblenke.github.io/images/screenshots/boot2docker/step4-enter-password.png" width="1390" height="1104" title="Enter your password" alt="Installer asks for admin rights to install boot2docker"></p>

<h2>Step 5</h2>

<p>Before installing, the installer will advise how much space the install will take. Click the Install button to start the actual install.</p>

<p><img src="http://ianblenke.github.io/images/screenshots/boot2docker/step5-standard-install.png" width="1310" height="968" title="Click Install button" alt="Advice on how much space boot2docker will take when installed"></p>

<h2>Step 6</h2>

<p>When the installation is successfully, click the Close button to exit the installer.</p>

<p><img src="http://ianblenke.github.io/images/screenshots/boot2docker/step6-install-completed-successfully.png" width="1334" height="984" title="Click Close button" alt="Install completed successfully"></p>

<h2>Step 7</h2>

<p>You now have a shiny icon for boot2docker in /Applications you can click on to start a boot2docker terminal window session.</p>

<p><img src="http://ianblenke.github.io/images/screenshots/boot2docker/step7-installed-boot2docker-app.png" width="1352" height="1006" title="Run boot2docker app" alt="Boot2docker app is in Applications"></p>

<p>Congrats. You now have boot2docker installed.</p>
]]></content>
  </entry>
  
</feed>
